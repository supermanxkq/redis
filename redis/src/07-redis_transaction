Redis中的事务机制

redis中的事务比较简单

实例：

multi  打开事务。

 set  age   10

set  age   20

exce  执行命令



事务回滚操作

 

multi  打开事务。

 set  age   10

set  age   20

discard  执行命令







事务中如果一个命令没有执行成功，事务不会回滚。





乐观锁


乐观锁和版本管理是一样的。

假如有个文件a.txt

分别有两个人进行了下载，版本号分别都是1

左边的人进行了修改，然后进行了提交，此时服务器上面的版本号增加1为2.

右边的人进行修改，然后进行提交，因为他的版本号是1，所以会产生冲突。



watch key    即可添加一个乐观锁。

表示对key进行监视，如果2次进行修改，就会失败。



Redis中的持久化机制



2种实现方式

    1.快照（默认方式）-------将数据存储到文件里面

    2.aof方式  --------将操作命令存储到文件里面



快照设置方式

修改redis.conf配置文件

        save    900   1    900秒之内，如果有1次修改就进行一次快照。



aof方式

修改redis.conf配置文件

appendonly  no      不

appendfsync    always    每次写命令都会进行备份命令，性能不好，但是能保证持久化。

appendfsync     everysec  每秒进行备份命令，在性能和持久化方面做了很好的折中。

appendfsync    no          完全依赖os，性能最好，持久化没有保证。



发布与订阅消息



打开一个会话

    subscribe  tv1  tv2  订阅tv1 tv2

再打开一个会话

    subscribe   tv1   订阅 tv1



再打开一个会话

    publish   tv1      messae....     返回订阅用户的数量





就会向订阅tv1的所有用户发送message消息。







redis虚拟内存的使用


添加really-user-vm  yes到vm-enabled yes

来确认使用虚拟内存。







